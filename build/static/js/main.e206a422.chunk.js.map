{"version":3,"sources":["index.js"],"names":["marked","require","App","className","Previewer","href","React","Component","props","state","markdown","this","setState","style","value","onChange","e","updateMarkdown","target","dangerouslySetInnerHTML","__html","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAMIA,G,MAASC,EAAQ,KAgDfC,E,uKAEF,OACI,yBAAKC,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,WAAd,yBACA,+BAGJ,kBAACC,EAAD,MACA,gCACE,uBAAGC,KAAK,+BAAR,iB,GAZMC,IAAMC,WAmBlBH,E,kDAEJ,WAAYI,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SArEW,ymCAkEI,E,2DAOJA,GACbC,KAAKC,SAAS,CAAEF,e,+BAGR,IAAD,OACP,OACA,yBAAKP,UAAU,OACb,yBAAKA,UAAU,YAEb,wBAAIA,UAAU,WAAd,kBACA,8BACEA,UAAU,QACVU,MAAS,GACTC,MAAOH,KAAKF,MAAMC,SAClBK,SAAU,SAACC,GACT,EAAKC,eAAeD,EAAEE,OAAOJ,WAKnC,yBAAKX,UAAU,YAEb,wBAAIA,UAAU,WAAd,WACA,yBACEA,UAAU,SACVgB,wBAAyB,CACzBC,OAAQpB,EAAOW,KAAKF,MAAMC,mB,GAnCZJ,IAAMC,WA2C9Bc,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACrB,EAAD,OAEFsB,SAASC,eAAe,W","file":"static/js/main.e206a422.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n// global variable needed for compiling markdown to HTML synchronously\nlet marked = require(\"marked\");\n\n// Markdown template\nconst placeholder = \n`# Welcome to my React Markdown Previewer\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n  \nHere's some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n1. And there are numbered lists too.\n1. Use just 1s if you want! \n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\n\nclass App extends React.Component {\n  render() {\n    return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col xs-12\">\n              <h1 className=\"heading\">Markdown Live Preview</h1>\n              <hr />\n            </div>\n          </div>\n          <Previewer />\n          <footer>\n            <a href=\"https://github.com/1v4n1v4n\">by 1v4n</a>\n          </footer>\n        </div>\n    );\n  }\n}\n\nclass Previewer extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdown: placeholder\n    };\n  }\n  \n  updateMarkdown(markdown) {\n    this.setState({ markdown });\n  }\n\n  render() {\n    return (  \n    <div className=\"row\">\n      <div className=\"col-md-6\">\n      {/* Input Area */}\n        <h3 className=\"heading\">Markdown Input</h3>\n        <textarea\n          className=\"input\"\n          style = {{}}\n          value={this.state.markdown}\n          onChange={(e) => {\n            this.updateMarkdown(e.target.value);\n          }}\n        >\n        </textarea>\n      </div>\n      <div className=\"col-md-6\">\n        {/* Output Area */}\n        <h3 className=\"heading\">Preview</h3>\n        <div\n          className=\"output\"\n          dangerouslySetInnerHTML={{\n          __html: marked(this.state.markdown)}}>\n        </div>\n      </div>\n    </div>  \n    )\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}